<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yesomething.dao.UserDao">
  <resultMap id="BaseResultMap" type="cn.yesomething.domain.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_birthday" jdbcType="TIMESTAMP" property="userBirthday" />
    <result column="user_picture" jdbcType="VARCHAR" property="userPicture" />
  </resultMap>
  <!-- 动态sql -->
  <sql id="insertKeySql">
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null and userName != ''">
        user_name,
      </if>
      <if test="userPassword != null and userPassword != ''">
        user_password,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userNickname != null and userNickname != ''">
        user_nickname,
      </if>
      <if test="userBirthday != null">
        user_birthday,
      </if>
      <if test="userPicture != null and userPicture != ''">
        user_picture,
      </if>
    </trim>
  </sql>
  <sql id="insertValuesSql">
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null and userName != ''">
        #{userName},
      </if>
      <if test="userPassword != null and userPassword != ''">
        #{userPassword},
      </if>
      <if test="userSex != null">
        #{userSex},
      </if>
      <if test="userNickname != null and userNickname != ''">
        #{userNickname},
      </if>
      <if test="userBirthday != null">
        #{userBirthday},
      </if>
      <if test="userPicture != null and userPicture != ''">
        #{userBirthday},
      </if>
    </trim>
  </sql>
  <sql id="updateSql">
    <trim suffixOverrides=",">
      <if test="userPassword != null and userPassword != ''">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=INTEGER},
      </if>
      <if test="userNickname != null and userNickname != ''">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null">
        user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="userPicture != null and userPicture != ''">
        user_picture = #{userPicture,jdbcType=VARCHAR}
      </if>
    </trim>
  </sql>
  <!-- 按用户名删除 -->
  <delete id="deleteByUserName" parameterType="java.lang.String">
    delete from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </delete>
  <!-- 按用户id删除 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <!-- 按照输入的信息全部插入 -->
  <insert id="insert" parameterType="cn.yesomething.domain.User">
    insert into user (user_id, user_name, user_password,
      user_sex, user_nickname, user_birthday,
      user_picture)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
      #{userSex,jdbcType=INTEGER}, #{userNickname,jdbcType=VARCHAR}, #{userBirthday,jdbcType=TIMESTAMP},
      #{userPicture,jdbcType=VARCHAR})
  </insert>
  <!-- 按输入的条件动态插入 -->
  <insert id="insertSelective" parameterType="cn.yesomething.domain.User">
    insert into user <include refid="insertKeySql"></include>
    values <include refid="insertValuesSql"></include>
  </insert>
  <!-- 按用户id更新全部信息 -->
  <update id="updateByPrimaryKey" parameterType="cn.yesomething.domain.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=INTEGER},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_birthday = #{userBirthday,jdbcType=TIMESTAMP},
      user_picture = #{userPicture,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <!-- 按用户名动态更新信息 -->
  <update id="updateByUserNameSelective" parameterType="cn.yesomething.domain.User">
    update user
    set <include refid="updateSql"></include>
    where user_name = #{userName,jdbcType=VARCHAR}
  </update>
  <!-- 按用户id查询用户信息 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select user_id, user_name, user_password, user_sex, user_nickname, user_birthday, 
    user_picture
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <!-- 按用户名查询用户信息 -->
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_name, user_password, user_sex, user_nickname, user_birthday,
           user_picture
    from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  <!-- 按用户名查询用户密码 -->
  <select id="selectPasswordByUserName" resultType="java.lang.String">
    select user_password
    from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  <!-- 按用户昵称查询用户信息 -->
  <select id="selectByUserNickname" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_name, user_password, user_sex, user_nickname, user_birthday,
           user_picture
    from user
    where user_nickname = #{userNickname,jdbcType=VARCHAR}
  </select>
  <!-- 全表通查 -->
  <select id="selectAll" resultMap="BaseResultMap">
    select user_id, user_name, user_password, user_sex, user_nickname, user_birthday, 
    user_picture
    from user
  </select>
</mapper>